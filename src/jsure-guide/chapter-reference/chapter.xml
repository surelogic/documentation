<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../lib/docbook-xml-4.5/docbookx.dtd">

<chapter id="reference"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Reference</title>
  <sect1>
    <title>The JSure Menu</title>
    
    <para>The <guimenu>JSure</guimenu> menu, see <xref linkend="fig-jsure-menu"/>, appears
    as an item on the Eclipse workspace main menu. This menu provides
    direct access to common JSure commands.</para>

    <figure id="fig-jsure-menu">
      <title>The JSure menu</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/jsure-menu.png"/></imageobject>
      </mediaobject>
    </figure>
    
    <para>The commands on the <guimenu>JSure</guimenu> main menu are
    
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guimenuitem>Focus Verification&hellip;</guimenuitem></title>
            <para>This command allows the user to choose which project
            should be assured by JSure.  A dialog is opened to allow the
            user to select which project to assure, as seen in <xref
            linkend="fig-focus-verification-window"/>. Assurance will be
            enabled for the selected project and disabled for all other
            projects in the workspace.  JSure may additionally prompt the 
            user whether to add the SureLogic annotation types JAR file
            to the project; see <xref linkend="sec-adding-promises-jar"/>.</para>
          </formalpara>
          
          <figure id="fig-focus-verification-window">
            <title><guimenuitem>The Focus Verification dialog box</guimenuitem></title>
            <mediaobject>
              <imageobject><imagedata fileref="images/focus-verification-window.png"/></imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <formalpara>
            <title><guimenuitem>Add/Update Promises Library...</guimenuitem></title>
            <para>This command lets the user add or update the
            promises library for a project. A dialog is opened to
            allow the user to select the project.</para>
          </formalpara>

	  <figure id="fig-add-update-promises-library-window">
            <title><guimenuitem>The Add/Update Promises Library dialog box</guimenuitem></title>
            <mediaobject>
              <imageobject><imagedata fileref="images/fig-add-update-promises-library-window.png"/></imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <formalpara>
            <title><guimenuitem>Disable Verification of All Projects</guimenuitem></title>
            <para>This command ensures that no project is selected for assurance.</para>
          </formalpara>
        </listitem>
  
        <listitem>
          <formalpara>
            <title><guimenuitem>Open Code Verification Perspective</guimenuitem></title>
            <para>This menu choice opens the <guilabel>Code
            Verification</guilabel> perspective. This perspective is
            useful for examining the JSure assurance results;
            see <xref linkend="sec-code-verification-perspective"/>. This
            perspective may also be opened via the normal Eclipse menus
            and toolbars for perspectives.</para>
          </formalpara>
        </listitem>
  
        <listitem>
          <formalpara>
            <title><guimenuitem>Send Tip for Improvement</guimenuitem></title>
            <para>This command opens a dialog to allow entry of a
            suggestion by the user to improve the JSure tool. For more
            information please see <xref
            linkend="sec-bugs-and-tips"/>.</para>
          </formalpara>
        </listitem>
  
        <listitem>
          <formalpara>
            <title><guimenuitem>Send Problem Report</guimenuitem></title>
            <para>This command opens a dialog to allow entry of a problem
            report by the user about the JSure tool. For more information
            please see <xref linkend="sec-bugs-and-tips"/>.</para>
          </formalpara>
        </listitem>

	<listitem>
	  <formalpara>
	    <title><guimenuitem>Run JSure
	    Tutorials</guimenuitem></title> <para>This command opens a
	    dialog to allow the user to import tutorial projects into
	    their workspace and open the JSure help to the step by
	    step tutorials.  For more information please see <xref
	    linkend="tutorials"/>.</para>
	  </formalpara>
	</listitem>
  
        <listitem>
          <formalpara>
            <title><guimenuitem>Manage SureLogic Licenses</guimenuitem></title>
            <para>This command opens the SureLogic license management
            dialog. This dialog allows the user to install, view, and
            uninstall licenses for JSure and other SureLogic tools. For
            more information see <xref linkend="sec-license-management"
            />.</para>
          </formalpara>
        </listitem>          
      </itemizedlist>
    </para>
  </sect1>

  <sect1 id="sec-package-explorer">
    <title>Additions to the Package Explorer</title>

    <para>JSures makes several additions to the toolbars and menus of the Eclipse
    <guilabel>Package Explorer</guilabel> view.  Basically, it adds the same two 
    commands to three different places.  The commands are 
    
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guiicon><inlinegraphic
            fileref="images/jsure_verify.gif"/> Focus Verification on
            this Project</guiicon></title>
            
            <para>This command enables verification for the currently selected project
            and disables it for all other projects.  JSure may additionally prompt the 
            user whether to add the SureLogic annotation types JAR file
            to the project; see <xref linkend="sec-adding-promises-jar"/>.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><guiicon><inlinegraphic
            fileref="images/jsure_no_verify.gif"/> Disable Verification</guiicon></title>
            
            <para>This command disables verification for the currently selected project.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    
    They are added to
    
      <itemizedlist>
        <listitem>
          <para>The view&rsquo;s toolbar; see <xref
          linkend="fig-toolbar-menu"/>.</para>
        </listitem>
        <listitem>
          <para>The view&rsquo;s menu; see <xref
          linkend="fig-toolbar-menu"/>.</para>
        </listitem>
        <listitem>
          <para>The view&rsquo;s context menu under the
          <guisubmenu>JSure</guisubmenu> menu; see <xref
          linkend="fig-context-menu"/>.</para>
        </listitem>
      </itemizedlist>
    </para>

    <figure id="fig-toolbar-menu">
      <title>JSure additions to the <guilabel>Package Explorer</guilabel> toolbar and menu</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/toolbar-menu.png"/></imageobject>
      </mediaobject>
    </figure>

    <figure id="fig-context-menu">
      <title>JSure additions to the <guilabel>Package Explorer</guilabel> context menu</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/context-menu.png"/></imageobject>
      </mediaobject>
    </figure>
  </sect1>
  
  <sect1 id="sec-code-verification-perspective">
    <title>The Code Verification perspective</title>
    
    <para>The <guilabel>Code Verification</guilabel> perspective organizes the Eclipse
    workbench to show views which will help you to interact with
    tool findings.</para>
    
    <sect2>
      <title>Switching to the Perspective</title>
      
      <para>The <guilabel>Code Verification</guilabel> perspective can be enabled
      in several ways:
        <itemizedlist>
          <listitem>
            <para>By selecting <menuchoice><guimenu>JSure</guimenu>
            <guimenuitem>Open Code Verification
            Perspective</guimenuitem></menuchoice>.</para>
          </listitem>
          
          <listitem>
            <para>By choosing to switch to the perspective when focusing
            verification on a project:
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/perspective-switch.png" />
                </imageobject>
              </mediaobject>
            </para>
          </listitem>
          
          <listitem>
            <para>By selecting <menuchoice><guimenu>Window</guimenu>
            <guisubmenu>Open Perspective</guisubmenu>
            <guimenuitem>Other&hellip;</guimenuitem></menuchoice>, and
            then choosing <guilabel>Code Verification</guilabel> from
            the <guilabel>Open Perspective</guilabel> dialog box.  Or by
            using any other standard Ecilpse mechanism to switch
            perspectives, such as clicking the the perspective&rsquo;s
            icon (<guiicon><inlinegraphic
            fileref="images/jsure_logo.gif"/></guiicon>) in the shortcut
            bar.</para>
          </listitem>          
        </itemizedlist>
      </para>
    </sect2>
    
    <sect2>
      <title>The Verification Status View</title>
      
      <para>The only view unique to the <guilabel>Code
      Verification</guilabel> perspective is the <guilabel>Verification
      Status</guilabel> view.  You can add this view to any other
      Eclipse perspective by choosing
      <menuchoice><guimenu>Window</guimenu> <guisubmenu>Show
      View</guisubmenu>
      <guimenuitem>Other&hellip;</guimenuitem></menuchoice> command, and
      then choosing <guilabel>Verification Status</guilabel> under the
      <guilabel>JSure</guilabel> category.</para>

      <figure id="fig-status-view">
        <title>The <guilabel>Verification Status</guilabel> view</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/status-view.png"/></imageobject>
        </mediaobject>
      </figure>

      <para>The <guilabel>Verification Status</guilabel> view displays
      the JSure assurance results in a tree form; see <xref
      linkend="fig-status-view"/>.  The results are grouped by
      category: <guilabel>Effects</guilabel>,
      <guilabel>Concurrency</guilabel>,
      <guilabel>Uniqueness</guilabel>, and <guilabel>Thread
      effects</guilabel>. There is also a special category for
      warnings and informational results <guilabel>Suggestions and
      warnings</guilabel>, as well as a category for error reports
      about the annotations themselves: <guilabel>Modeling
      problems</guilabel>. The specific results are described in
      detail in <xref
      linkend="understanding-assurance-output"/>.</para>
      
      <para>The view&rsquo;s toolbar has three command icons:
        <itemizedlist>
          <listitem>
            <formalpara>
              <title><guiicon><inlinegraphic fileref="images/info.gif"/></guiicon></title>
              <para>Toggling this button controls whether or not the warning results are 
              displayed in the view.</para>
            </formalpara>            
          </listitem>
          <listitem>
            <formalpara>
              <title><guiicon><inlinegraphic fileref="images/expandall.gif"/></guiicon></title>
              <para>This button expands all the nodes in the result trees.  Generally speaking,
              this an expensive operation because the result trees can be very large.  It is
              not recommended that you do this.</para>
            </formalpara>            
          </listitem>
          <listitem>
            <formalpara>
              <title><guiicon><inlinegraphic fileref="images/collapseall.gif"/></guiicon></title>
              <para>This button collapses all the nodes in the result trees.</para>
            </formalpara>            
          </listitem>
        </itemizedlist>
      </para>

      <figure id="fig-status-view-menu">
        <title>The <guilabel>Verification Status</guilabel> view menu</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/status-view-menu.png"/></imageobject>
        </mediaobject>
      </figure>
      
      <para>The view&rsquo;s menu has one commands; see <xref
      linkend="fig-status-view-menu"/>:
        <itemizedlist>
          <listitem>
            <formalpara>
              <title><guiicon><inlinegraphic fileref="images/info.gif"/> Hide/Show Information &amp; Warning Results</guiicon></title>
              <para>Toggling this menu item controls whether or not the warning results are 
              displayed in the view.</para>
            </formalpara>            
          </listitem>
        </itemizedlist>
      </para>      
    </sect2>
  </sect1>

  <sect1 id="sec-adding-promises-jar">
    <title>The SureLogic Annotation Types JAR File</title>
    
    <para>As mentioned <link
    linkend="sec-quick-start-annotations">previously</link>, JSure
    design intent is expressed using a set of Java 5 annotation types
    in the package <package>com.surelogic</package>. 
    To use JSure with your code, your project must be able to reference
    the SureLogic annotation types.  The SureLogic annotation types are
    bundled together in <filename>promises.jar</filename>. This file
    must be on the build path of your project for the annotations be to
    used.</para>
      
    <para>When verification is focused on a project, JSure checks to see if
      <orderedlist>
        <listitem>
          <para>That project contains <filename>promises.jar</filename>.</para>
        </listitem>
        <listitem>
          <para>And if so, whether <filename>promises.jar</filename> is on the build path.</para>
        </listitem>
      </orderedlist>
    If the JAR file is missing, or not on the build path, JSure offers to correct the 
    situation.</para>  

    <para>Specifically, if the JAR file is not in the project at all, the user is presented
    with the dialog box
    
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/add-promises-jar.png" />
        </imageobject>
      </mediaobject>

    The default option <guibutton>Add to Project Root</guibutton>
    creates <filename>promises.jar</filename> in the root of the project
    and adds it to the build path.  The option
    <guibutton>Browse&hellip;</guibutton> allows you to choose where in
    the project to put <filename>promises.jar</filename>.  The option
    <guibutton>No</guibutton> does nothing; that is, JSure will focus
    verification on the project without adding the JAR file to the
    project or its build path.</para>
    
    <para>If the JAR file is present in the project, but not on the build path, the
    user is presented with a dialog box that displays the present location of the 
    JAR file and asks the user if it should be added to the build path:
    
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/add-to-build-path.png" />
        </imageobject>
      </mediaobject>
    
    The default option <guibutton>Yes</guibutton> adds the existing
    <filename>promises.jar</filename> to the project&rsquo;s build path.
     The option <guibutton>Copy new JAR file to&hellip;</guibutton>
    allows you to choose a new location in the project to create a new
    copy of <filename>promises.jar</filename>. The option
    <guibutton>No</guibutton> does nothing;  that is, JSure will focus
    verification on the project without adding the JAR file the
    project&rsquo;s build path. </para>
    
    <sect2>
      <title>Choosing a Location for the Promies JAR</title>
      
      <para>If you select to choose a location for <filename>promises.jar</filename>,
      JSure presents you with a dialog box showing the project and its directories.  JSure
      filters out all the hidden directores (those that begin with a period), all the 
      source directories, and all the output directories.  See <xref linkend="fig-choose-a-location"/>
      for an example.</para>
      
      <para>If you select the project itself, the JAR file will be placed in the 
      root of the project.</para>

      <figure id="fig-choose-a-location">
        <title>Dialog box for choosing a location for the SureLogic annotations JAR file</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/choose-a-location.png"/></imageobject>
        </mediaobject>
      </figure>
      
      <para>If you cancel the selection, then JSure proceeds to focus verification
      on the project without adding the SureLogic annotation types to the project (if they were
      missing) and without adding the JAR file to the project&rsquo;s build path.</para>
      
      <para>If you select a location where the JAR is already located,
      then you are asked if it should be overwritten; see <xref
      linkend="fig-overwrite-promises"/>.  Choosing
      <guibutton>Yes</guibutton> overwrites the file with a new copy of
      <filename>promises.jar</filename> and adds it to the build path. 
      Choosing <guibutton>No</guibutton> leaves the existing JAR file
      alone and adds it to the build path.</para>

      <figure id="fig-overwrite-promises">
        <title>Dialog box querying if the existing SureLogic annotations JAR file should be overwritten</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/overwrite-promises.png"/></imageobject>
        </mediaobject>
      </figure>
    </sect2>
  </sect1>

  <sect1 id="sec-project-properties">
    <title>JSure Project Properties</title>
    
    <para>JSure adds a <guilabel>JSure</guilabel> pane to the project
    properties dialog, see <xref linkend="fig-jsure-properties"/>.  This
    pane cotains one setting: <guibutton>Focus assurance on this Java project</guibutton>.
    Selecting this setting focuses assurance on the current project, and removes
    assurance from the other projects in the workspace.  Deselecting this setting 
    removes assurance from the current project.</para>
    
    <figure id="fig-jsure-properties">
      <title>The JSure project properties pane</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/jsure-properties.png"/></imageobject>
      </mediaobject>
    </figure>    
  </sect1>

  <sect1 id="sec-preferences">
    <title>JSure Preferences</title>
    
    <para>JSure adds two panes to the Eclipse Preferences window:
      <itemizedlist>
        <listitem>
          <para><menuchoice><guisubmenu>JSure</guisubmenu></menuchoice></para>
        </listitem>
        <listitem>
          <para><menuchoice><guisubmenu>JSure</guisubmenu> 
          <guimenuitem>Analyses</guimenuitem></menuchoice></para>
        </listitem>
      </itemizedlist>
    </para>
    
    <para>The <guilabel>JSure</guilabel> pane, see <xref linkend="fig-jsure-prefs-1"/>,
    allows you to reset settings for switching to the <guilabel>Code Verification</guilabel>
    perspective.  It has two options under the <guilabel>Appearance</guilabel> heading:
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><guibutton>Prompt to change to the Code Verification
            perspective on project focus</guibutton></title>

            <para>If selected, whenever a project is selected to receive
            the JSure focus, you will be prompted to change to the
            <guilabel>Code Verification</guilabel> perspective if it is not
            already the active perspective.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><guibutton>If no prompt, automatically change to the
            Code Verification perspective</guibutton></title>

            <para>If selected, and JSure is not set to prompt for a perspective
            change, JSure automatically changes to the <guilabel>Code
            Verification</guilabel> perspective when a project receives
            the JSure focus.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    
    The pane also has a <guibutton>Manage SureLogic Licenses</guibutton> button 
    that brings up the dialog box for installing and removing licenes; see
    <xref linkend="sec-license-management"/>.</para>
    
    <figure id="fig-jsure-prefs-1">
      <title>The JSure Eclipse preferences pane</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/jsure-prefs-1.png"/></imageobject>
      </mediaobject>
    </figure>
    
    <para>The <guilabel>Analyses</guilabel> pane allows you to choose
    which assurance analyses are actually executed by JSure.  Most of
    the time you do not need to change these settings.  Each analysis
    knows which other analyses it depends on: you can see this by
    opening the tree rooted at each analysis.  Selecting an analysis
    also transitively selects any analyses that it depends on.
    Deselecting an analysis transitively deselects any analyses that
    depend on it.  If you change the settings, JSure warns you that it
    is a good idea to exit and restart Eclipse/JSure: see <xref
    linkend="fig-analysis-change-warning"/>.</para>
    
    <figure id="fig-jsure-prefs-2">
      <title>The JSure analyses preferences pane</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/jsure-prefs-2.png"/></imageobject>
      </mediaobject>
    </figure>

    <figure id="fig-analysis-change-warning">
      <title>Dialog box advising a restart after changing the analysis settings</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/analysis-change-warning.png"/></imageobject>
      </mediaobject>
    </figure>
  </sect1>

  <sect1 id="sec-license-management">
    <title>License management</title>

    <para>JSure is commercial software and a license is required to
    use it. Licenses are obtained from SureLogic and expire after some
    period of time. Lack of a license will prohibit you from running
    assuing code.  Selecting <guimenuitem>Manage SureLogic
    Licenses</guimenuitem> from the <guimenu>JSure</guimenu> menu
    brings up the license management form as seen in <xref
    linkend="fig-license-management" />. For JSure to operate properly
    either a <emphasis>JSure</emphasis> or <emphasis>All
    Tools</emphasis> license must be installed.</para>

    <figure id="fig-license-management">
      <title>The SureLogic license management dialog</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/quick-start-license-dialog-empty.png"/></imageobject>
      </mediaobject>
    </figure>

    <para>By default license installation requires internet access.
    SureLogic can, in special cases, provide licenses that do not
    require internet access. Further use of the product does not
    require internet access. If a manual uninstall is done, before
    license expiration, internet access is also required.  SureLogic
    tracks the number of times a particular license is installed and
    uninstalled. We stress that JSure does not, unlike other
    plug-ins such as MyEclipse, &ldquo;talk-back&rdquo; to SureLogic each time
    Eclipse is started.</para>

    <para>The installed license expires after a period of time
    (clearly visible to the user) and a new license has to
    be installed to continue to use JSure.</para>

    <para>Licenses can be installed more than once.  Thus, one
    license can be used for all of an organization or SureLogic can
    issue one per location or one per organizational entity.</para>

    <para>If the JSure Eclipse plug-in does not have a valid
    license it will not affect the Eclipse installation that JSure
    is installed into. The IDE will load and function normally, but
    when JSure functions are executed they will fail noting the
    lack of a license. Serviceability functions of the tool (e.g.,
    sending problem reports to SureLogic, installing and
    uninstalling licenses) function properly without a license.  The
    unlicensed JSure plug-in can be uninstalled or disabled within
    Eclipse.</para>

    <para>When you receive a license file from SureLogic it is
    installed via this dialog.  To install the license select the
    row in the license table that matches the type of license.  For
    example, if you have been sent a JSure license select the
    JSure row in the license table.  Next press the
    <guibutton>Install License</guibutton> button.  You will be
    prompted for the location of your license file.  The tool checks
    with SureLogic and reports that your license has been installed
    and returns showing information about the installed license. The
    license file is not examined by the tool after the installation
    is completed unless you install the file again (after an
    uninstall).</para>

    <para>To uninstall a license, select the row in the license
    table and press the <guibutton>Uninstall
    License</guibutton>. You will be asked if you are sure you want
    to uninstall the license.  If you confirm the uninstall then the
    license is removed.  This may take a minute as SureLogic is
    informed that your license has been uninstalled.</para>

    <para>When a license is nearing expiration the tool warns the
    user with the dialog shown in <xref
    linkend="fig-license-management-expiration-warning" /></para>

    <figure id="fig-license-management-expiration-warning">
      <title>Dialog warning that the installed JSure license is about to expire</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/license-management-expiration-warning.png"/></imageobject>
      </mediaobject>
    </figure>

    <para>When a license does expire it disappears from the dialog.
    The tool is considered unlicensed at that point. To fix this
    situation install a new license (it is not required to install a
    new version of JSure).</para>
  </sect1>

  <sect1 id="sec-bugs-and-tips">
    <title>Bugs and tips</title>

    <para>JSure allows any user to send problem reports and suggestions
    to SureLogic from the main menu. Selecting
    <menuchoice><guimenu>JSure</guimenu> <guimenuitem>Send Tip for
    Improvement</guimenuitem></menuchoice> or
    <menuchoice><guimenu>JSure</guimenu> <guimenuitem>Send Problem
    Report</guimenuitem></menuchoice> allows a tip or problem report to
    be send to SureLogic directly within Eclipse as shown in <xref
    linkend="fig-bugs-and-tips-main-menu-service"/>. These menu choices
    bring up dialogs that allow the user to control exactly what
    information is sent to SureLogic.  In addition, the user can preview
    the exact text that will be sent over the internet.</para>

    <figure id="fig-bugs-and-tips-main-menu-service">
      <title>Menu items to send bugs and tips to SureLogic</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/bugs-and-tips-main-menu-service.png"/></imageobject>
      </mediaobject>
    </figure>

    <para>The <guimenuitem>Send Tip for Improvement</guimenuitem>
    command opens a dialog to allow entry of a suggestion by the
    user to improve the JSure tool as seen in <xref
    linkend="fig-bugs-and-tips-menu-send-tip" />. The dialog allows the
    user to control exactly what information is sent to SureLogic.
    In addition, the user can preview the exact text that will be
    sent.</para>

    <figure id="fig-bugs-and-tips-menu-send-tip">
      <title>Dialog allowing the user to enter a tip to improve JSure</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/bugs-and-tips-menu-send-tip.png"/></imageobject>
      </mediaobject>
    </figure>

    <para>The <guimenuitem>Send Problem Report</guimenuitem> command
    opens a dialog to allow entry of a problem report by the user
    about the JSure tool as seen in <xref
    linkend="fig-bugs-and-tips-menu-problem-report" /> The dialog
    allows the user to control exactly what information is sent to
    SureLogic.  In addition, the user can preview the exact text
    that will be sent.</para>

    <figure id="fig-bugs-and-tips-menu-problem-report">
      <title>Dialog allowing the user to enter a problem report about JSure</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/bugs-and-tips-menu-problem-report.png"/></imageobject>
      </mediaobject>
    </figure>

    <para>Messages sent from these dialogs go over HTTP to
    SureLogic. If a proxy is used on your network then it is
    critical to configure Eclipse to use it.  To do this open the
    Eclipse <guilabel>Preferences</guilabel> and examine the
    <guilabel>Network Connections</guilabel> under the
    <guilabel>General</guilabel> preferences.  This dialog allows
    you to configure Eclipse for your network as shown in <xref
    linkend="fig-bugs-and-tips-network-connections" /></para>

    <figure id="fig-bugs-and-tips-network-connections">
      <title>Eclipse preferences for network connections within the IDE.</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/bugs-and-tips-network-connections.png"/></imageobject>
      </mediaobject>
    </figure>
  </sect1>
</chapter>
