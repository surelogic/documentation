<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../../lib/docbook-xml-4.5/docbookx.dtd">

<sect2 id="assuring-region-lock">
  <title>Assuring <classname>@RegionLock</classname></title>
  
  <para>The example class <classname>SimpleLockExample</classname> in project 
  <filename>Lock Output</filename>
  demonstrates the basics of lock assurance:</para>

  <programlisting linenumbering="numbered" startinglinenumber="6"><emphasis>@RegionLock("L1 is this protects Instance")</emphasis>
public class SimpleLockExample {
  private int f;
  private int g;
  
  public synchronized int getF() {
    // Good
    return f;
  }
  
  public void setF(final int v) {
    synchronized (this) {
      // Good
      f = v;
    }
  }
  
  <emphasis>@RequiresLock("L1")</emphasis>
  public void doStuff() {
    // Good
    f = 0;
  }
  
  public int getG() {
    // Bad
    return g;
  }
}</programlisting>

  <para>The receiver (<parameter>this</parameter>) is used as a lock to
  protect the <structfield>Instance</structfield> region of the object.
  The field <structfield>f</structfield> is always accessed correctly,
  while the field <structfield>g</structfield> is accessed
  incorrectly.</para>
  
  <mediaobject>
    <imageobject condition="isHTML">
      <imagedata fileref="images/lock-assurance-02.png"/>
    </imageobject>
    <imageobject condition="isFO">
      <imagedata width="100%" scalefit="1" fileref="images/lock-assurance-02.png"/>
    </imageobject>
  </mediaobject>
  
  <para>The correct and incorrect field accesses are grouped under
  distinct subheadings, described below.  The heading <guilabel>lock
  precondition(s)</guilabel> is described below in <xref
  linkend="assuring-requires-lock"/>.</para>
  
  <sect3 id="protected-field-accesses">
    <title>protected field access(es)</title>

    <para>This heading groups together all the accesses to fields in the
    protected region that JSure can assure occur when the correct lock
    is held. For our example, this would be the fields in the region
    <structfield>Instance</structfield> and the lock referenced by
    <parameter>this</parameter>.  The individual assurance results under
    this subheading are of the form <computeroutput>Lock
    "<replaceable>lock</replaceable>" held when accessing
    <replaceable>field</replaceable></computeroutput>. In our example,
    there are three of these, one for each access to field
    <structfield>f</structfield> on lines 13, 19, and 26.</para>

    <para>Each assurance result is backed up by <guilabel>supporting
    information</guilabel> that shows the locks that can be assured to
    be held when the field is accessed: <computeroutput
    id="intrinsic-lock-held">Intrinsic lock
    "<replaceable>lock</replaceable>" is held</computeroutput>. This
    result links to the source line of code of the expression that
    acquires the lock. In our example, for the access on line 11, the
    supporting information links to the declaration of the surrounding
    <code>synchronized</code> method <function>getF()</function> on line
    11. For the access on line 19, the supporting information links to
    the surrounding <code>synchronized</code> block on line 17. 
    Finally, for the access on line 26, the supporting information links
    to the the <classname>@RequiresLock</classname> annotation of the
    surrounding method <function>doStuff()</function>on line 23. In a
    more complete example, one in which we have calls to the method
    <function>doStuff()</function>, the use of
    <classname>@RequiresLock</classname> would be assured based on the
    correctness of its callsites. If there were unassured callsites,
    then this field access would be marked with a
    <guiicon><inlinegraphic fileref="images/plus-x.jpg"/></guiicon> to
    indicate that assurance of one its preconditions failed.</para>
  </sect3>
  
  <sect3 id="unprotected-field-accesses">
    <title>unprotected field access(es); possible race condition
    detected</title>

    <para>This heading groups together all the accesses to fields in the
    protected region that JSure cannot assure always occur when the lock
    is held. The individual assurance results under this subheading are
    of the form <computeroutput>Lock "<replaceable>lock</replaceable>"
    not held when accessing
    <replaceable>field</replaceable></computeroutput>.  In our example,
    there is one of these results for the access to the field
    <structfield>g</structfield> at line 31.</para>
  </sect3>
</sect2>
