<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../lib/docbook-xml-4.5/docbookx.dtd">

<chapter id="troubleshooting">
  <title>Troubleshooting</title>
    <orderedlist>
      <listitem>
        <formalpara>
          <title>Nested Class Folders</title>
          <para>It is possible to construct a classpath that, while it
          may compile in Eclipse, is too ambiguous for Flashlight to
          correctly instrument.  In this case, Flashlight will display
          something like the following message:</para>
          <programlisting>
Classpath entry workspace/project is instrumented and nests the instrumented classpath directory entry workspace/project/foo  
   Plug-in Vendor: SureLogic, Inc.
   Plug-in Name: SureLogic Non-User Interface Eclipse Common Code
   Version: 4.0.0.qualifier
   Plug-in ID: com.surelogic.common.core
          </programlisting>
          <para>This happens when the Eclipse
          <filename>.classpath</filename> contains one or more entries
          that are nested directories of another entry.  It would be
          difficult or impossible for Flashlight to instrument the
          project's classfiles correctly in this situation, so it
          complains about the problem instead.  You can fix this problem
          by altering your project's classpath, or by selectively
          instrumenting the code from the <link
          linkend="instrumentation-pane">instrumentation tab</link> of
          the <guimenuitem>Flashlight Launch Configuration</guimenuitem>
          view.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>Unexpected Stack or Stack Trace</title>
          <para>
            Flashlight works hard to transform your program while
            preserving its original behavior.  A program that makes
            extensive use of reflection may notice Flashlight, however.
            Programs that make use of SecurityManager#getClassContext or
            similar method calls to inspect the execution stack can
            potentially run into trouble, as Flashlight wraps many
            method calls in the classes that it instruments.  Methods
            such as SecurityManager#checkAccess should still work,
            however, as Flashlight does not instrument the standard
            library by default.
          </para>
        </formalpara>
      </listitem>
    </orderedlist>
</chapter>
