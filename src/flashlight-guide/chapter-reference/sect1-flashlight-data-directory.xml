<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../lib/docbook-xml-4.5/docbookx.dtd">

<sect1 id="flashlight-data-directory">
  <title>The Flashlight Data Directory</title>

  <para>The Flashlight Eclipse plug-in writes the flashlight profile data
  files and other information in a location known as the "Flashlight
  Data Directory."  This directory is set in the Flashlight preferences
  pane, as described in <xref linkend="flashlight-preferences"/>.  The
  default location for this directory is as
  <filename><replaceable>workspace
  directory</replaceable>/.flashlight-data</filename> where
  <replaceable>workspace directory</replaceable> is the path to the
  current Eclipse workspace.</para>

  <sect2 id="per-run-directory">
    <title>Per-Run Directories</title>

    <para>Each run of an instrumented application in Eclipse creates a
    new "per-run directory" in the Flashlight data directory.  The name
    of each per-run directory is given by the template
    <filename><replaceable>fully-qualified-main-class-name</replaceable>-yyyy.MM.dd-'at'-HH.mm.ss.SSS</filename>,
    where 
    
      <itemizedlist>
        <listitem><replaceable>fully-qualified-main-class-name</replaceable>
        is the fully qualified classname of the
        class that contains the <function>main</function> method of the
        application.</listitem>
        
        <listitem><code>-yyyy.MM.dd-'at'-HH.mm.ss.SSS</code> is a Java
        date format template.  The date template is filled in using the
        time the application was executed.</listitem>
      </itemizedlist>  
    
    For example, an instrumented run of the main class
    <classname>com.surelogic.fluid.javac.Util</classname> might yield
    the per-run directory
    <filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411</filename>.</para>

    <para>Each per-run directory contains
    
      <itemizedlist>
        <listitem>Files generated during the instrumentation
        process.</listitem>

        <listitem>Zip archives of the source code of the
        application.</listitem>

        <listitem>JAR files of the instrumented classfiles.</listitem>

        <listitem>The Flashlight data file gathered during execution,
        and any additional log file it may have generated.</listitem>
      </itemizedlist>
    </para>

    <para>More specifically, at the top-level, each per-run directory
    <filename><replaceable>runDir</replaceable></filename> contains the
    files

      <itemizedlist>
        <listitem>
          <formalpara>
            <title><filename>fields.txt</filename></title>
            
            <para>The fields database file generated by the
            instrumentation process.  This is a text file that
            associates each field declared in one of the instrumented
            classes with a unique identifier.  Each line of the file is of
            the format 
            
              <screen>&lt;32-bit integer id&gt; &lt;fully-qualified-class-name&gt; &lt;field name&gt; &lt;isStatic&gt; &lt;isFinal&gt; &lt;isVolatile&gt;</screen>
            </para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename>sites.txt</filename></title>
            
            <para>The sites database file generated by the
            instrumentation process.  This is a text file that assigns a
            unique identifier to each program location where something
            of interest to Flashlight occurs.  Each line of the file is
            of the format
              
              <screen>&lt;64-bit integer id&gt; &lt;source file name&gt; &lt;class name&gt; &lt;method name&gt; &lt;source line number&gt;</screen>
            </para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename>instrumentation.log</filename></title>
            
            <para>Log file from the instrumentation process.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename><replaceable>runDir</replaceable>.flh</filename></title>
            
            <para>A header file that contains basic information about
            the run.  Usable even when the data file is
            corrupted.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename><replaceable>runDir</replaceable>.{fl, flb}[.gz]</filename></title>
            
            <para>The data file generated during instrumented
            execution.  This file has the same base name as the per-run
            directory.  The file is optionally compressed in the gzip
            format, and if so, has the <filename>.gz</filename> extension.  The file
            is either in a textual XML format with the <filename>.fl</filename>
            extension, or in a binary format with the <filename>.flb</filename>
            extension.  For example, if the per-run directory is
            <filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411</filename>
            we would expect to find a data file named one of 
            
              <itemizedlist>
                <listitem><filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.fl</filename></listitem>
                <listitem><filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.fl.gz</filename></listitem>
                <listitem><filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.flb</filename></listitem>
                <listitem><filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.flb.gz</filename></listitem>
              </itemizedlist>
            </para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename><replaceable>runDir</replaceable>.flog</filename></title>
            
            <para>An optional log file generated during instrumented execution.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    
    The per-run directory also contains three top-level directories:
    
      <itemizedlist>
        <listitem>
          <formalpara>
            <title><filename>projects</filename></title>
            
            <para>This directory contains JAR files holding the
            instrumented classfiles of the instrumented
            application.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename>external</filename></title>
            
            <para>This directory contains instrumented JAR files
            corresponding to JAR files that are normally located outside
            of any project in the Eclipse workspace.  These arise from
            Eclipse classpath variables that are used to refer to things
            like <varname>ANT_HOME</varname>, which would normally be
            a directory in the user's file system, or
            <varname>JUNIT</varname>, which refers to a JAR file in an
            Eclipse plug-in.</para>
          </formalpara>
        </listitem>

        <listitem>
          <formalpara>
            <title><filename>source</filename></title>
            
            <para>This directory contains zip files of the source code
            of the instrumented application.</para>
          </formalpara>
        </listitem>
      </itemizedlist>
    </para>

    <para>The exact structure of these directories is as follows.  Prior
    to instrumented in the application, the Eclipse Flashlight launcher
    determines the set of projects in the workspace that contribute to
    the application's classpath.  For each such project
    <replaceable>p</replaceable>

      <itemizedlist>
        <listitem>A single zip file
        <filename><replaceable>p</replaceable>.src.zip</filename> is
        added to the <filename>source</filename> source directory.  This
        zip file contains all the source files in the project based on
        the Eclipse source directories.  The directory structure
        includes the project directory itself.</listitem>
        
        <listitem>A directory
        <filename><replaceable>p</replaceable></filename> is added to
        the <filename>projects</filename> directory.  This directory
        contains one JAR file for each Eclipse output directory in the
        project.  The name of the JAR file is based on the name of each
        output directory.  For example, the default output directory
        <filename>bin</filename> yields the JAR file
        <filename>bin.jar</filename>.</listitem>
      </itemizedlist>
    </para>
  </sect2>
  
  <sect2>
    <title>Example</title>
    
    <para>The application whose main class is
    <code>com.surelogic.fluid.javac.Util</code> needs the projects
    <filename>common</filename>, <filename>fluid</filename>,
    <filename>fluid-javac</filename>,
    <filename>jsure-message</filename>,
    <filename>jsure-xml-results-viewer</filename>,
    <filename>sierra-fb</filename>, <filename>sierra-message</filename>,
    <filename>sierra-pmd</filename>, and
    <filename>sierra-tool</filename>.  A run of this class at 2:16 PM on
    September 30, 2008 would yield the following per-run directory
    structure:

      <screen>~/.flashlight-data/com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411
      com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.fl.gz
      com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.flh
      com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411.flog
      fields.txt
      instrumentation.log
      projects/
              common/
                      bin.jar
              fluid/
                      bin.jar
              fluid-javac/
                      bin.jar
              jsure-mesasge/
                      bin.jar
              jsure-xml-results-viewer/
                      bin.jar
              sierra-fb/
                      bin.jar
              sierra-message/
                      bin.jar
              sierra-pmd/
                      bin.jar
              sierra-tool/
                      bin.jar
      sites.txt
      source/
              common.src.zip
              fluid.src.zip
              fluid-javac.src.zip
              jsure-mesasge.src.zip
              jsure-xml-results-viewer.src.zip
              sierra-fb.src.zip
              sierra-message.src.zip
              sierra-pmd.src.zip
              sierra-tool.src.zip</screen>
    </para>
  </sect2>
</sect1>
