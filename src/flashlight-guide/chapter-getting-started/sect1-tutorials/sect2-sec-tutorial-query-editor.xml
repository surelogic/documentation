<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<sect2 id="sec-tutorial-query-editor">
  <title>Using the Query Editor</title>

  <para>
    The set of queries that ship with Flashlight are intended to be sufficient
    for the task of inspecting the results.  If you have suggestions for queries
    that you think would be useful, please submit them using <xref
    linkend="sec-bugs-and-tips" /> or by emailing
    <email>support@surelogic.com</email>.  You may nevertheless encounter a
    situation where you wish to create a custom query or modify an existing one,
    perhaps with the intention of exporting the data to a spreadsheet.  You can
    use the <guilabel>Query Editor</guilabel> view to accomplish this.  This
    tutorial won't explore the editor in detail, but should give you enough
    information to get started.
  </para>

  <para>
    From the Flashlight perspective, add the <guilabel>Query Editor</guilabel>
    view using <menuchoice><guimenu>Window</guimenu><guimenu>Show
    View</guimenu><guimenuitem>Other&hellip;</guimenuitem></menuchoice> and
    selecting <menuchoice><guimenu>Flashlight</guimenu><guimenuitem>Query
    Editor</guimenuitem></menuchoice>.  You should see a view that contains a
    list of queries on the left.  Click on <guilabel>What fields (non-static)
    are shared?</guilabel> On the right side of this view, as shown in <xref
    linkend="fig-tutorial-query-editor" />, you can see the actual SQL statement
    that is executed whenever we run this query. <xref
    linkend="fig-tutorial-query-editor-query-results" /> shows an example of
    what this query looks like when run.  You can reproduce this by selecting
    the prepared run of PlayerUI we created in the previous tutorial from the
    <guilabel>Flashlight Runs</guilabel> view and double-clicking on the name of
    the query in the <guilabel>Query Editor</guilabel> view.
  </para>

  <figure id="fig-tutorial-query-editor">
    <title>What fields (non-static) are shared?</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/tutorial-query-editor.png" />
      </imageobject>
    </mediaobject>
  </figure>
  <figure id="fig-tutorial-query-editor-query-results">
    <title>Result of running 'What fields (non-static) are shared?'</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/tutorial-query-editor-query-results.png" />
      </imageobject>
    </mediaobject>
  </figure>

  <para>
    The above figure displays a standard SQL query that displays some summary
    information about shared fields in a flashlight program.  It does this by
    selecting information from the embedded database created when a Flashlight
    run is prepared.  For a complete reference as to what Derby&mdash; the
    database Flashlight uses&mdash; accepts as valid SQL, see the <ulink
    url="http://db.apache.org/derby/docs/dev/ref/ref-single.html" >Derby
    Reference Manual</ulink>.  You may have noticed that the column labels in
    this query are a little odd, and that they don't quite match up with what
    the labels look like in the query results.  Flashlight allows you to provide
    formatting clues to the <guilabel>Query Results</guilabel> view by adding
    suffixes to your column labels.  These suffixes begin with __ followed by
    any number of special tokens, some of which are:
  </para>
  <itemizedlist>
    <listitem>
      Add (l),(r),(c) in order to left, right, or center-justify the column.
    </listitem>
    <listitem>
      Add the | symbol in order to make a tree-table.  Everything preceding the
      | is considered to be part of the tree portion.  In the above example the
      package, class, and field names are considered part of the tree. You may
      also place a ] on any of the columns comprising the tree in order to tell
      the <guilabel>Query Results</guilabel> view to keep part of the tree
      collapsed by default when it displays the results.
    </listitem>
    <listitem>
      In a tree-table, you can display the sum, count, or max of the table
      underneath any node of the tree using the syntax (op on colnum,
      colnum...).  For example, (count on 2,3) would display the number of rows
      underneath each node in the second and third column of the tree.
    </listitem>
    <listitem>
      Sometimes the children of a query need an identifier that can't be
      displayed prettily.  For example, 'What are the individual instances of
      this non-static field?' is a sub-query of 'What fields (non-static) are
      shared?', and it needs the numeric id of the field in order to run.  The
      latter query displays the field name, and hides the field id using the
      (hide) token.
    </listitem>
    <listitem>
      Add ('image name') in order to show a picture next to the row's text.
      Flashlight uses 'package.gif' and 'class.gif' extensively.
    </listitem>
  </itemizedlist>


</sect2>