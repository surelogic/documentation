<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../lib/docbook-xml-4.5/docbookx.dtd">

<sect1 id="quick-start">
  <title>Quick start: How to instrument your code and query Flashlight</title>

  <para>This section assumes that you have installed Flashlight. If you see a
  <guimenu>Flashlight</guimenu> menu item on your Eclipse main menu then you can
  assume Flashlight has been properly installed.</para>

  <para>You need to install a license to use Flashlight.  If you do not have a
  license file visit <ulink
  url="http://www.surelogic.com">http://www.surelogic.com</ulink> to obtain one.
  To install the license select <guimenuitem>Manage SureLogic
  Licenses</guimenuitem> from the <guimenu>Flashlight</guimenu> menu as shown in
  <xref linkend="fig-quick-start-license-menu" />.</para>

  <figure id="fig-quick-start-license-menu">
    <title>The menu option to install a license for Flashlight</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-license-menu.png" />
      </imageobject>
    </mediaobject>
  </figure>

  <para> This will cause the <guilabel>Manage SureLogic Licenses</guilabel> to
  appear as shown in <xref linkend="fig-quick-start-license-dialog-empty"
  />. Highlight the Flashlight row and select the <guibutton>Install
  License</guibutton> button to install your license file.</para>

  <figure id="fig-quick-start-license-dialog-empty">
    <title>The SureLogic license management dialog</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-license-dialog-empty.png" />
      </imageobject>
    </mediaobject>
  </figure>

  <para>Flashlight will not disrupt your Eclipse installation if a license for
  it is not installed, however, it will not allow you to use Flashlight
  functionality.  We will assume from this point on that you have installed your
  license.</para>

  <para>Flashlight is a dynamic analysis tool which means that you have to run
  your program to use it.  Flashlight instruments your program when it starts up
  and uses that instrumentation to collect data about your program.  By default,
  data resides in your workspace under a directory named
  <filename>.flashlight-data</filename>.</para>
  
  <para>To run your program with Flashlight instrumentation is similar to launching it
  normally in the Eclipse IDE. There are three ways to do this which we illustrate below
  using the <emphasis>ChatTestClient</emphasis> Java program (from a tutorial).</para>

	<itemizedlist>
		<listitem>
			<para>Using the Flashlight menu as shown in
			<xref linkend="fig-quick-start-launch-main-menu" />.</para>
		</listitem>
		<listitem>
			<para>Using the Flashlight quick launch icon in the Eclipse toolbar as shown in
			<xref linkend="fig-quick-start-launch-toolbar" />.</para>
		</listitem>
		<listitem>
			<para>Using the context menu of a launchable Java file as shown in
			<xref linkend="fig-quick-start-launch-context" />.</para>
		</listitem>
	</itemizedlist>
  
  <figure id="fig-quick-start-launch-main-menu">
    <title>Launching an instrumented Java program from the Flashlight menu</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-launch-main-menu.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <figure id="fig-quick-start-launch-toolbar">
    <title>Launching an instrumented Java program from the Eclipse quick launch toolbar</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-launch-toolbar.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <figure id="fig-quick-start-launch-context">
    <title>Launching an instrumented Java program from the file context menu</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-launch-context.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>To obtain useful information about your program from the tool you should
  exercise it in a realistic manner. Typically, long program runs are not required,
  however simply running unit test code or isolated cases can create poor data. Try
  to run you program in a manner were its concurrency is exercised to the fullest
  extent possible.</para>
  
  <para>When your program launches the <guilabel>Flashlight Launched Run Control Dialog</guilabel> appears. An
  example of this dialog is shown in <xref linkend="fig-quick-start-launched-run-control" />. Each
  running Flashlight-instrumented program gets a listing in this dialog&mdash;it can be though of as being similar to a web
  browser download monitor dialog.</para>
  
  <figure id="fig-quick-start-launched-run-control">
    <title>Dialog that shows the state of all running Flashlight-instrumented applications</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-launched-run-control.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>It is possible to stop data collection and disconnect Flashlight from the
  running application by pressing the <guiicon><inlinegraphic
  fileref="images/red_x.gif" /></guiicon> icon to the far right of each dialog entry.
  When the application completes or Flashlight is disconnected from the running application. The collected data is prepared for querying by the tool. Data
  preparation may take some time and its progress is reported in the <guilabel>Flashlight
  Launched Run Control Dialog</guilabel> as shown in <xref linkend="fig-quick-start-launched-run-control-prep" />.</para>
  
  <figure id="fig-quick-start-launched-run-control-prep">
    <title>Showing the progress of collected data preparation for querying by the user</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-launched-run-control-prep.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>When data is prepared querying is done in a special Eclipse perspective called the
  <guilabel>Flashlight</guilabel> perspective.  If data preparation of any run completes and Eclipse is not currently
  in the Flashlight perspective. The tool prompts the user to change to this perspective. This prompt is shown
  in <xref linkend="fig-quick-start-switch-to-fl-persp" />.</para>

  <figure id="fig-quick-start-switch-to-fl-persp">
    <title>Dialog asking to change Eclipse to the Flashlight perspective</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/quick-start-switch-to-fl-persp.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>When you open the Flashlight perspective in Eclipse it will look similar to <xref linkend="fig-quick-start-fl-persp" />. The
      views in this perspective are described fully in <xref linkend="flashlight-perspective" /> but the purpose and use of each view is sketched below.</para>
  
  <figure id="fig-quick-start-fl-persp">
    <title>The Flashlight perspective</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/flashlight-perspective.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>The <guilabel>Flashlight Runs</guilabel> view (upper-left in the above image) lists all the instrumented program runs
      you have done using Flashlight. This view lists executions of programs, so a single
      program may be listed several times. Each run includes the name of the program and the
      time of the run. Runs of Android applications are listed with a
      <guiicon><inlinegraphic fileref="images/android_app.gif" /></guiicon> icon. In the
      image above <application>FlashlightTutorial_CounterRace</application> is an Android
      application that has been run on a Nexus 4 phone. Standard
      Java applications, both desktop and server-side, are listed with a
      <guiicon><inlinegraphic fileref="images/java_app.gif" /></guiicon> icon.
      In the image above <application>ChatTestClient</application> is a Java desktop (Swing) application.</para>
      
  <para>The <guilabel>Query Results</guilabel> view (middle-right in the above image) shows either (a) an overview of the run
      currently selected in the <guilabel>Flashlight Runs</guilabel> view or (b) query results as
      a table, tree or tree-table. The image above shows the run overivew. This lists good and bad
      news about the selected run. These news items are not definitive, because they represent
      information from a single run of the program&mdash;hence the name <emphasis>news</emphasis> instead of <emphasis>results</emphasis>.
      Some news items are underlined. These underlined news items may be selected with the mouse to invoke a query and show the
      news item's corresponding results. Some news items are because no information was found during the run. These items have no associated
      results and are not underlined in the <guilabel>Query Results</guilabel> view.</para>
      
  <para>When results are shown in the <guilabel>Query Results</guilabel> view you can select a row and "drill-in" to a particular row of the
      result that is of interest. Hence, you can run queries based upon the results of previous queries. This "drill-in" tree of queries is
      tracked in the <guilabel>Query Results Explorer</guilabel> view (upper-right in the above image).  You can move up and down within
      a particular "drill-in" tree of query results by using the forward and back arrows in the toolbar of both results views or by selecting
      a particular result in the <guilabel>Query Results Explorer</guilabel> view.</para>
      
      
  <para>To conclude this section we remind you that Flashlight is focused on helping improve the performance and safety of <emphasis>concurrent</emphasis>
      Android and Java programs. But what happens if you run a program that is not concurrent? You will get a big red bar in the overview warning you
      that no shared data was observed during the program run. This is shown for the traditional Java "Hello, world!" program in <xref linkend="fig-quick-start-fl-persp-helloworld" />.</para>
      
  <figure id="fig-quick-start-fl-persp-helloworld">
    <title>The Flashlight perspective</title>
    <mediaobject>
      <imageobject>
        <imagedata fileref="images/flashlight-perspective-helloworld.png" />
      </imageobject>
    </mediaobject>
  </figure>
  
  <para>If you get a <emphasis>No Shared Data Warning</emphasis> you should try to exercise the concurrent portions of your program more
      fully. Also you may need to change what libraries are instrumented during your program run which is discussed in
      <xref linkend="flashlight-preferences" />. Finally, it could be the case that your code is not concurrent.</para>

</sect1>
