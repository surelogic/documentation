<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../lib/docbook-xml-4.5/docbookx.dtd">

<section id="flashlight-android"  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Using Flashlight with Android</title>
  
  <para>You can use Flashlight in collaboration with version 21.0.0 of Google's
  Android Development Tools (ADT).  If you do not have the Android SDK and ADT
  installed, you can get it by following the instructions <link
  xlink:href="http://developer.android.com/sdk/installing.html">here.</link></para>
  
      <note>
		<title>Do not terminate Android applications too quickly</title>

		<para>The data collection infrastructure flushes data off the Android device
		roughly every three seconds. Therefore, it is a good idea to let the application
		sit for several seconds before you close it on the phone and then terminate it.</para>
	</note>

  <section>
    <title>Running Flashlight</title>
    <formalpara>
      <title>Enable Network Access</title>
      <para>In order for Flashlight to collect data from your Android application,
      you will need to give your application permission to access your phone's
      network.  You can do this by adding the following to your
      AndroidManifest.xml:</para> 
      <programlisting><![CDATA[<uses-permission android:name="android.permission.INTERNET"/>]]></programlisting>
      <para>The <guilabel>Android Manifest Editor</guilabel> also allows you to
      add this permission in the <guilabel>Permissions</guilabel> tab.</para>
      <figure id="fig-android-permissions">
        <title>Configure the application's permissions</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/android-permissions.png"/></imageobject>
        </mediaobject>
      </figure>
    </formalpara>
    <formalpara>
      <title>Launch The Application</title>
      <para> The simplest way to launch the application is to right-click on the
      project and choose <menuchoice><guisubmenu>Flashlight As</guisubmenu>
      <guisubmenu>Android Application</guisubmenu></menuchoice>. Launch Android
      Application.</para>
      <figure id="fig-launch-android">
        <title>Launch Flashlight from the <menuchoice><guisubmenu>Flashlight
        As</guisubmenu></menuchoice> menu</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/launch-android.png"/></imageobject>
        </mediaobject>
      </figure>
      <para>You can also use the create, configure, and run Android Applications
      from the <guilabel>Flashlight Launch Configuration</guilabel> view. See
      <xref linkend="flashlight-launch" /> for more details.</para>
      <figure id="fig-android-configuration">
        <title>Create and manage a run configuration from the
        <guilabel>Flashlight Configuration View</guilabel></title>
        <mediaobject>
          <imageobject><imagedata fileref="images/android-configuration.png"/></imageobject>
        </mediaobject>
      </figure>
    </formalpara>

  </section>

  <section>
    <title>Stopping Flashlight</title>
    <para>The simplest approach is to use the <guilabel>Flashlight Launched Run Control</guilabel> dialog. This will not
    stop the application on the Android device or emulator but will stop data collection
    and prepared the data for querying.  Data collection is stopped for a
    particular instrumented Android run by pressing the
    <inlinegraphic fileref="images/red_x.gif"/> to the far right of that run in the dialog.</para>
    
      <figure id="fig-android-run-control">
        <title>Terminating data collection the Flashlight Launched Run Control dialog</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/android-launched-run-control.png"/></imageobject>
        </mediaobject>
      </figure>
      
    <para>
      Another approach is to stop the application on the Android device itself.
      Depending on your application, you may need to close the program yourself.
      How you do this depends on the and version of Android that you are using.
      Later versions of Android have a <guilabel>Application Monitor</guilabel>
      widget that is suitable for this purpose.  Alternatively, you can leave
      the program running and manually terminate the instrumentation using the
      runtime console.
    </para>
      <figure id="fig-android-app-manager">
        <title>Terminating the application from the Application Monitor</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/android-app-manager.png"/></imageobject>
        </mediaobject>
      </figure>

    <figure id="fig-android-stop">
      <title>Terminating Flashlight Instrumentation from the Runtime Console</title>
      <mediaobject>
        <imageobject><imagedata fileref="images/android-console.png"/></imageobject>
      </mediaobject>
    </figure>

  </section>
  
  <section id="flashlight-apk"><title>Launching Packaged Android Applications (APK)</title>
      <para>Any Android APK may be launched from the Flashlight main menu as shown in 
      <xref linkend="fig-android-apk-launch" />.</para>
      
            <figure id="fig-android-apk-launch">
        <title>Launching a packaged Android application (binary APK) from the Flashlight main menu</title>
        <mediaobject>
          <imageobject><imagedata fileref="images/android-launch-apk.png"/></imageobject>
        </mediaobject>
      </figure>
      
      <para>There are a number of approaches to get an APK file, these are discussed in the following paragraphs.</para>


	<formalpara>
		<title>Using an Application</title>
		<para>
			There are a number of tools that allow you to get at the APK
			files sitting on your Android device. One such tool is
			<emphasis>Apk Extractor</emphasis>,	which is available on Google Play
			<ulink
				url="https://play.google.com/store/apps/details?id=net.sylark.apkextractor">here</ulink>.
			<emphasis>Apk Extractor</emphasis>
			allows you to extract the APK file corresponding to any
			application installed on your Android device. The file can then be mailed to
			you or saved to the device's SD card for easy extraction later.
		</para>
	</formalpara>
	
	<formalpara>
		<title>From an Android project</title>
		<para>Any Eclipse Android project can produce a signed APK suitable
		    for instrumentation by right-clicking on the project from the
		    <guilabel>Project Explorer</guilabel> view and choosing
		    <menuchoice><guimenuitem>Android Tools</guimenuitem><guimenuitem>Export Signed Application Package...</guimenuitem></menuchoice>
		    as shown below
		     <mediaobject>
          <imageobject><imagedata fileref="images/android-apk-from-project.png"/></imageobject>
        </mediaobject>
		    </para>
		    
	</formalpara>
	
		<formalpara>
		<title>From a project website</title>
		<para>Many open source applications have a project website that makes their APK file
		publicly available.  For example, builds of connectbot&mdash;an ssh client&mdash;and tomdroid&mdash;a
		notekeeping application&mdash;can be found at <ulink url="https://code.google.com/p/connectbot/">google code</ulink>
		and <ulink url="https://launchpad.net/tomdroid">launchpad.net</ulink> respectively.</para>
	</formalpara>
  </section>

</section>


