<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../lib/docbook-xml-4.5/docbookx.dtd">

<section id="flashlight-data-directory">
  <title>The Flashlight data directory</title>

  <para>The Flashlight Eclipse plug-in writes the flashlight profile data
  files and other information in a location known as the "Flashlight
  Data Directory."  This directory location is shown in the Flashlight preferences
  pane, as described in <xref linkend="flashlight-preferences"/>.  The
  directory is called <filename>.flashlight-data</filename> and is located in the root
  of your current Eclipse workspace.</para>

  <section id="per-run-directory">
    <title>Per-run directories</title>

    <para>Each run of an instrumented application in Eclipse creates a
    new "per-run directory" in the Flashlight data directory.  The name
    of each per-run directory is given by the template
    <filename><replaceable>fully-qualified-main-class-name</replaceable>-yyyy.MM.dd-'at'-HH.mm.ss.SSS-<replaceable>Platform</replaceable></filename>,
    where 
    
    <itemizedlist>
      <listitem><replaceable>fully-qualified-main-class-name</replaceable>
      is the fully qualified class name of the
      class that contains the <function>main</function> method of the
      application.</listitem>
      
      <listitem><code>-yyyy.MM.dd-'at'-HH.mm.ss.SSS</code> is a Java
      date format template.  The date template is filled in using the
      time the application was executed.</listitem>

      <listitem><replaceable>Platform</replaceable> is the platform the run
      happened on, either <guilabel>Java</guilabel> or
      <guilabel>Android</guilabel>.</listitem>
    
    </itemizedlist>  
    
    For example, an instrumented run of the main class
    <classname>com.surelogic.fluid.javac.Util</classname> might yield
    the per-run directory
    <filename>com.surelogic.fluid.javac.Util-2008.09.30-at-14.16.55.411-Java</filename>.</para>

    <para>Each per-run directory contains
    
    <itemizedlist>
      <listitem><para>Files generated during the instrumentation
      process.</para></listitem>

      <listitem><para>Zip archives of the source code of the
      application.</para></listitem>

      <listitem><para>JAR files of the instrumented class files.</para></listitem>

      <listitem><para>The Flashlight data file gathered during execution,
      and any additional log file it may have generated.</para></listitem>
    </itemizedlist>
    </para>

    <para>More specifically, at the top-level, each per-run directory
    <filename><replaceable>runDir</replaceable></filename> contains the
    files

    <itemizedlist>
      <listitem>
        <formalpara>
          <title><filename>checkpoint.<replaceable>xxxxxx</replaceable>.fl.gz</filename></title>
          <para>
            The checkpoint files contain collected data from the run of the program, and are sequentially numbered.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><filename>checkpoint.<replaceable>xxxxxx</replaceable>.complete</filename></title>
          <para>
            Once a checkpoint file has been recorded completely, a .complete file is created to indicate that it is valid.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><filename>instrumentation.log</filename></title>
          
          <para>Log file from the instrumentation process.</para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><filename>runtime.log</filename></title>
          
          <para>Log file from the running, fully instrumented program.</para>
        </formalpara>
      </listitem>
    </itemizedlist>

    The per-run directory also contains three top-level directories
    <itemizedlist>
      <listitem>
        <formalpara>
          <title><filename>instrumentation</filename></title>
          <para>This directory contains the collected output of the instrumentation process.  This includes the following files and folders:

          <itemizedlist>

            <listitem>
              <formalpara>
                <title><filename>fields.txt</filename></title>
                
                <para>The fields database file generated by the instrumentation
                process. This is a text file that associates each field declared
                in one of the instrumented classes with a unique identifier.
                Each line is of the format
                
                <screen>&lt;32-bit integer id&gt; &lt;fully-qualified-class-name&gt; &lt;field name&gt; &lt;isStatic&gt; &lt;isFinal&gt; &lt;isVolatile&gt;</screen>
                </para>
              </formalpara>
            </listitem>
            <listitem>
              <formalpara>
                <title><filename>sites.txt.gz</filename></title>
                
                <para>The gzipped sites database file generated by the
                instrumentation process.  This is a text file that assigns a
                unique identifier to each program location where something of
                interest to Flashlight occurs.  Each line of the file is of the
                format
                
                <screen>&lt;64-bit integer id&gt; &lt;source file name&gt; &lt;class name&gt; &lt;method name&gt; &lt;source line number&gt;</screen>
                </para>
              </formalpara>
            </listitem
>            <listitem>
              <formalpara>
                <title><filename>class_hierarchy.txt.gz</filename></title>
                
                <para>The gzipped class hierarchy database file generated by the
                instrumentation process.  This is a text file that assigns a
                unique identifier to each program location where something of
                interest to Flashlight occurs.  Excepting the first line of the
                file, which indicates how many entries there are, each line of
                the file is of the format
                
                <screen>&lt;class name id&gt; &lt;number of parents&gt; &lt;parent classes&gt;...</screen>
                </para>
              </formalpara>
            </listitem>

            <listitem>
              <formalpara>
                <title>external</title>
                <para>
                  This directory contains instrumented JAR files corresponding
                  to JAR files that are normally located outside of any project
                  in the Eclipse workspace. These arise from Eclipse class path
                  variables that are used to refer to things like ANT_HOME,
                  which would normally be a directory in the user's file system,
                  or JUNIT, which refers to a JAR file in an Eclipse plug-in.
                </para>
              </formalpara>
            </listitem>
            <listitem>
              <formalpara>
                <title>projects</title>
                <para>This directory contains JAR files holding the instrumented
                class files of the instrumented application.</para>
              </formalpara>
            </listitem>
          </itemizedlist>
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><filename>prep</filename></title>
          <para>This directory contains data produced by the postmortem tool
          during the prep phase, including the database supporting the
          <guilabel>Eclipse</guilabel> query tool.
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title><filename>source</filename></title>
          <para>This directory contains zip files of the source code of the
          instrumented application.</para>
        </formalpara>
      </listitem>

    </itemizedlist>
  </para>
</section>



<section id="per-run-directory">
  <title>Deleting Flashlight data</title>
  <para>After using Flashlight for a while, you may find that your Flashlight
  data directory is getting quite large.  The easiest way to reduce the size
  of your data directory is to delete runs you no longer need from the <link
  linkend="flashlight-runs-view">Flashlight Runs</link> view.  A run can also
  be removed by deleting the directory directly from the Flashlight data
  directory.  Both methods will remove all prepared data from this run as
  well, so make sure that you are completely done with the run before deleting
  it.</para>
</section>
</section>
