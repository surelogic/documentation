<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../../../lib/docbook-xml-4.5/docbookx.dtd">

<sect2 id="effects"
       xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Effective Effects</title>

  <para>One of the kinds of design intent that a programmer can declare 
  and assure with JSure is method effects that describe program state that
  may be accessed when the method executes.  Specifically, the
  <classname>@RegionEffects</classname> method annotation
  is used to declare an upper bound on the runtime state that a method or
  constructor may read or write.  Affected state is expressed in terms of
  portions of objects, called <emphasis>regions</emphasis>, that are used
  to abstract away fields.  This tutorial elaborates 
  
    <itemizedlist>
      <listitem><para>The <classname>@RegionEffects</classname> annotations.</para></listitem>
      <listitem><para>The region hierarchy.</para></listitem>
      <listitem><para>Describing effects using targets.</para></listitem>
      <listitem><para><classname>@Unique</classname> fields and region aggregation.</para></listitem>
      <listitem><para>Effect assurance and effect masking.</para></listitem>
      <listitem><para>Regions, effects and method overriding.</para></listitem>
    </itemizedlist>
  </para>
  
  <para>To make effective use of JSure, you should be familiar with how to 
  declare effects on method and constructors.  Any program that makes
  non-trivial use of a <classname>@Unique</classname> (or <classname>@Borrowed</classname>)
  field is likely to require the addition of some effects annotations to
  support the assurance of the unique field.  The reason for this is described
  below, after a brief introduction to declaring simple effects.
  </para>

  <xi:include href="sect3-simplevar.xml"/>
</sect2>
